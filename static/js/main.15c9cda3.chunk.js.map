{"version":3,"sources":["context/SearchWordContext.tsx","features/SearchBar/SearchBar.tsx","components/Header.tsx","services/AlbumService.ts","features/AlbumList/AlbumListCard.tsx","features/AlbumList/AlbumList.tsx","pages/Home.tsx","services/ArtistService.ts","features/ArtistDetails/ArtistDetails.tsx","shared/utilities.ts","pages/ArtistPage.tsx","components/Routes.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["SearchWordContext","createContext","filter","setFilter","console","warn","useSearchWord","context","useContext","Error","SearchBar","className","placeholder","type","name","id","value","onChange","e","currentTarget","onClick","Header","to","http","axios","create","baseURL","headers","limit","get","AlbumListCard","album","image","getArtistID","content","src","label","attributes","AlbumList","useState","albums","setAlbums","useEffect","AlbumService","getTopNAlbums","then","res","data","feed","entry","catch","error","filteredAlbums","title","category","toLowerCase","includes","mapAlbums","map","resizedImage","replace","href","match","undefined","Home","ArtistDetails","artist","setArtist","ids","URLSearchParams","useLocation","search","artistID","split","ArtistService","getArtistAndAlbums","results","getAlbums","item","wrapperType","getArtist","find","log","mainAlbum","artworkUrl100","fixedDate","Date","releaseDate","collectionName","collectionPrice","primaryGenreName","collectionType","trackCount","collectionExplicitness","toLocaleDateString","copyright","controls","collectionId","artistName","ArtistPage","Routes","path","exact","Footer","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c9cda3.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport type SearchWordContextType = {\n  filter: string;\n  setFilter: (filter: string) => void;\n};\n\nexport const SearchWordContext = createContext<SearchWordContextType>({\n  filter: \"\",\n  setFilter: (filter) => console.warn(\"no filter provider\" + filter),\n});\n\nexport const useSearchWord = () => {\n  const context = useContext(SearchWordContext);\n  if (!context) {\n    throw new Error(`useSearchWord must be used within a CountProvider`);\n  }\n  return context;\n};\n","import React from \"react\";\nimport { useSearchWord } from \"../../context/SearchWordContext\";\n\nexport const SearchBar = () => {\n  const { filter, setFilter } = useSearchWord();\n\n  return (\n    <div className=\"field is-grouped\">\n      <p className=\"control is-expanded\">\n        <input\n          className=\"input is-info is-medium \"\n          placeholder=\"Search by artist, album, genre\"\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filter}\n          onChange={(e) => setFilter(e.currentTarget.value)}\n        />\n      </p>\n      <p className=\"control\">\n        <input\n          className=\"button is-info is-light is-medium \"\n          type=\"button\"\n          name=\"clear\"\n          id=\"clear\"\n          value=\"Clear\"\n          onClick={() => setFilter(\"\")}\n        />\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SearchBar } from \"../features/SearchBar/SearchBar\";\n\nimport { IoIosMusicalNote } from \"react-icons/io\";\n\nexport const Header = () => {\n  return (\n    <header className=\"bg-semi\">\n      <div className=\"container pure-g\">\n        <div className=\"pure-u-1-1 pure-u-lg-3-5\">\n          <h1 className=\"logo\">\n            <Link to=\"/\">\n              Awesome Albums <IoIosMusicalNote />\n            </Link>\n          </h1>\n          <p className=\"subtitle is-4\">Find the Awesomest Albums</p>\n        </div>\n        <div className=\"search-bar pure-u-1-1 pure-u-lg-1-3\">\n          <SearchBar />\n        </div>\n      </div>\n    </header>\n  );\n};\n","// import http from \"../utilities/http\";\nimport axios from \"axios\";\n\nconst http = axios.create({\n  baseURL: \"https://itunes.apple.com/us/rss/topalbums/\",\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\nclass AlbumService {\n  getTopNAlbums(limit = 100) {\n    return http.get(`limit=${limit}/json`);\n  }\n}\n\nexport default new AlbumService();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AlbumEntry } from \"../../shared/types\";\n\ntype Props = {\n  album: AlbumEntry;\n  image: string;\n  getArtistID: string | undefined;\n};\n\nexport const AlbumListCard = ({ album, image, getArtistID }: Props) => {\n  const content = (\n    <>\n      <div className=\"overflow-hidden\">\n        <img className=\"pure-img album-card-img card-grow\" src={image} />\n      </div>\n      <div className=\"album-card-text\">\n        <p className=\"title is-5\">{album[\"im:name\"].label}</p>\n        <p className=\"subtitle is-6\">{album[\"im:artist\"].label}</p>\n      </div>\n    </>\n  );\n\n  return (\n    <div className=\"pure-u-1-1 pure-u-sm-1-2 pure-u-md-1-3 pure-u-lg-1-4\">\n      {getArtistID ? (\n        <Link to={`/artist?id=${getArtistID}+${album.id.attributes[\"im:id\"]}`}>\n          {content}\n        </Link>\n      ) : (\n        content\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSearchWord } from \"../../context/SearchWordContext\";\n\nimport AlbumService from \"../../services/AlbumService\";\nimport { AlbumEntry, AlbumLists } from \"../../shared/types\";\nimport { AlbumListCard } from \"./AlbumListCard\";\n\nexport const AlbumList = () => {\n  const [albums, setAlbums] = useState<AlbumLists>();\n  const { filter } = useSearchWord();\n\n  const fetchAlbums = () => {\n    AlbumService.getTopNAlbums()\n      .then((res) => {\n        const data = res.data.feed.entry;\n        setAlbums(data);\n      })\n      .catch((e) => {\n        console.error(`Error fetching data: ${e}`);\n      });\n  };\n\n  useEffect(fetchAlbums, []);\n\n  // search functionality, to filter then map\n  const filteredAlbums = albums?.filter((album: AlbumEntry) => {\n    const matchText = `${album.title.label} ${album.category.attributes.label}`.toLowerCase();\n    return matchText.includes(filter.toLowerCase());\n  });\n\n  const mapAlbums = filteredAlbums?.map((album: AlbumEntry) => {\n    const imageToResize = album[\"im:image\"][2].label;\n    const resizedImage: string = imageToResize.replace(/170x170/i, \"380x380\");\n\n    // extract artist ID from URL string\n    let getArtistID: string | undefined = album[\"im:artist\"].attributes?.href;\n    if (getArtistID) {\n      const match: string[] | null = getArtistID.match(/[0-9]+/);\n      if (match) {\n        getArtistID = match[0];\n      } else {\n        getArtistID = undefined;\n      }\n    }\n\n    return (\n      <AlbumListCard\n        album={album}\n        image={resizedImage}\n        getArtistID={getArtistID}\n        key={album.id.attributes[\"im:id\"]}\n      />\n    );\n  });\n\n  return <div className=\"pure-g bg-light\">{albums ? mapAlbums : \"Loading...\"}</div>;\n};\n","import React from \"react\";\nimport { AlbumList } from \"../features/AlbumList/AlbumList\";\n\nexport const Home = () => {\n  return (\n    <div>\n      <h2 className=\"title is-3\">Top 100 iTunes</h2>\n      <AlbumList />\n    </div>\n  );\n};\n","// import http from \"../utilities/http\";\nimport axios from \"axios\";\n\nconst http = axios.create({\n  baseURL: \"https://cors-anywhere.herokuapp.com/https://itunes.apple.com/\",\n  headers: {\n    \"Content-type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  },\n});\n\nclass ArtistService {\n  getArtistAndAlbums(id : string | undefined) {\n    return http.get(`lookup?id=${id}&entity=album`);\n  }\n}\n\nexport default new ArtistService();\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport ArtistService from \"../../services/ArtistService\";\nimport { ArtistPageAlbumType, ArtistType } from \"../../shared/types\";\nimport { useQuery } from \"../../shared/utilities\";\n\nexport const ArtistDetails = () => {\n  const [artist, setArtist] = useState<ArtistType>();\n  const [albums, setAlbums] = useState<ArtistPageAlbumType>();\n  const query = useQuery();\n  const ids = query.get(\"id\");\n  const artistID = ids?.split(\" \")[0];\n  const albumID = ids?.split(\" \")[1];\n\n  const fetchArtist = () => {\n    ArtistService.getArtistAndAlbums(artistID)\n      .then((res) => {\n        const data = res.data.results;\n        // strange return data, separate data to different variables\n        const getAlbums = data.filter(\n          (item: { wrapperType: string }) => item.wrapperType === \"collection\"\n        );\n        const getArtist = data.find(\n          (item: { wrapperType: string }) => item.wrapperType === \"artist\"\n        );\n        setArtist(getArtist);\n        setAlbums(getAlbums);\n      })\n      .catch((e) => {\n        console.error(`Error fetching data: ${e}`);\n      });\n  };\n\n  useEffect(fetchArtist, [artistID]);\n\n  console.log(albums); //////// ==========\n\n  const mainAlbum = albums?.map((item: ArtistPageAlbumType) => {\n    const imageToResize = item.artworkUrl100;\n    const resizedImage: string = imageToResize.replace(/100x100/i, \"450x450\");\n    const fixedDate = new Date(item.releaseDate);\n\n    return (\n      <div key={item.collectionId} className=\"pure-g artist-page-card\">\n        <div className=\"pure-u-1-1 pure-u-md-1-2 pure-u-lg-1-3 text-align-center \">\n          <img src={resizedImage} />\n        </div>\n        <div className=\"pure-u-1-1 pure-u-md-1-2 pure-u-lg-2-3 artist-page-content\">\n          <h5 className=\"title is-5\">{item.collectionName}</h5>\n          <p>${item.collectionPrice}</p>\n          <p>\n            {item.primaryGenreName} {item.collectionType}\n          </p>\n          <p>Tracks: {item.trackCount}</p>\n          <p>Explicit Content: {item.collectionExplicitness}</p>\n          <p>Date Released: {fixedDate.toLocaleDateString()}</p>\n          <p className=\"marg-bot-1\">{item.copyright}</p>\n          <ReactAudioPlayer src=\"rickrolled.mp3\" controls />\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h5 className=\"subtitle is-5\">Additional Works by</h5>\n      <h3 className=\"title is-3\">{artist?.artistName}</h3>\n      <div>{mainAlbum}</div>\n    </div>\n  );\n};\n","import { useLocation } from \"react-router\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React from \"react\";\nimport { ArtistDetails } from \"../features/ArtistDetails/ArtistDetails\";\n\nexport const ArtistPage = () => {\n  return (\n    <div>\n      <ArtistDetails />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"../pages/Home\";\nimport { ArtistPage } from \"../pages/ArtistPage\";\n\nexport const Routes = () => (\n  <div className=\"container\">\n    <Switch>\n      <Route path=\"/\" exact={true}>\n        <Home />\n      </Route>\n      <Route path=\"/artist\" exact={true}>\n        <ArtistPage />\n      </Route>\n    </Switch>\n  </div>\n);\n","import React from \"react\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"bg-dark\">\n      <div className=\"container\">\n        © 2021 Awesome Albums — All rights reserved.\n      </div>\n    </footer>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Routes } from \"./components/Routes\";\nimport { Footer } from \"./components/Footer\";\nimport { SearchWordContext } from \"./context/SearchWordContext\";\n\nfunction App() {\n  const [filter, setFilter] = useState<string>(\"\");\n\n  console.log(filter);\n  return (\n    <SearchWordContext.Provider value={{ filter, setFilter }}>\n      <div className=\"bg-whitish\">\n        <Header />\n        <Routes />\n        <Footer />\n      </div>\n    </SearchWordContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}